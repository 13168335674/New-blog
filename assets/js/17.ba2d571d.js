(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{220:function(n,e,t){"use strict";t.r(e);var r=t(0),a=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-62685fc656a8f4ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-8a3c9480e66a82a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("hr"),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-568d61f2555a49f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-34b3694d825cdfdd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('/**\n * keyof<T>\n *  keyof 与 Object.keys 略有相似，只不过 keyof 取 interface 的键。\n */\n() => {\n  interface Person {\n    name: string;\n    age: number;\n    location: string;\n  }\n\n  type K1 = keyof Person; // "name" | "age" | "location"\n  type K2 = keyof Person[]; // "length" | "push" | "pop" | "concat" | ...\n  type K3 = keyof { [x: string]: Person }; // string\n\n  // 获取对象的属性\n  function pluck<T, K extends keyof T>(o: T, names: K): T[K] {\n    return o[names];\n  }\n};\n(_tip: "keyof 只会返回不为 null undefined never 的类型") => {\n  interface EnumType {\n    a: never;\n    b: undefined;\n    c: null;\n    d: number;\n    e: object;\n  }\n  type TypeEnumType = keyof EnumType; // a | b | c | d | e\n  type TypeEnumType1 = EnumType[keyof EnumType]; // number | object 去除了了3种假类型\n\n  type ReadonlyType<T> = {\n    readonly [P in keyof T]?: T[P];\n  };\n  let readOnly: ReadonlyType<EnumType> = {}; // 将 EnumType 所有类型都变为了了 只读\n};\n\n/**\n * Pick<T, K>\n *  从对象类型 T 挑选一些属性 K，比如对象拥有 5 个 key，\n *  只需要将 K 设置为 "name" | "age" 就可以生成仅支持这两个 key 的新对象类型。\n */\n() => {\n  interface IObj {\n    a: string;\n    b: number;\n    c: boolean;\n  }\n  type FilterObj = Pick<IObj, "a" | "b">;\n  const test: FilterObj = {\n    a: "str",\n    b: 1,\n  };\n};\n\n/**\n * Extract<T, U>\n *  Extract 是 Pick 的底层 API，直到 2.8 版本才内置进来，\n *  可以认为 Pick 是挑选对象的某些 key，Extract 是挑选 key 中的 key。\n */\n() => {\n  interface IObj {\n    a: string;\n    b: number;\n    c: boolean;\n  }\n  type FilterKey = Extract<keyof IObj, "a">;\n  const test: FilterKey = "a";\n};\n\n/**\n * Exclude<T, U>\n *  将 T 中的 U 类型排除，和 Extract 功能相反。\n */\n() => {\n  interface IObj {\n    a: string;\n    b: number;\n    c: boolean;\n  }\n  type FilterKey = Exclude<keyof IObj, "a" | "b">;\n  const test: FilterKey = "c";\n};\n\n/**\n * Record<K, U>\n *  ts文档上对Record的介绍不多，但却经常用到，Record是一个很好用的工具类型。\n *  他会将一个类型的所有属性值都映射到另一个类型上并创造一个新的类型\n */\n(_tip: "源码") => {\n  // 将K中的所有属性值都转换为T类型，并将返回的新类型返回给proxyKType，K可以是联合类型、对象、枚举\n  type Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n};\n(_tip: "Demo") => {\n  interface AnimalsInfo {\n    dog: {\n      name: string;\n      age: number;\n    };\n    cat: {\n      name: string;\n      age: number;\n    };\n  }\n  const animalsInfo: AnimalsInfo = {\n    dog: {\n      name: "dogName",\n      age: 2,\n    },\n    cat: {\n      name: "catName",\n      age: 3,\n    },\n  };\n};\n(_tip: "Demo1") => {\n  type petsGroup = "dog" | "cat";\n  interface IPetInfo {\n    name: string;\n    age: number;\n  }\n  type IPets = Record<petsGroup, IPetInfo>;\n  const animalsInfo = {\n    dog: {\n      name: "dogName",\n      age: 2,\n    },\n    cat: {\n      name: "catName",\n      age: 3,\n    },\n  };\n};\n(_tip: "Demo2") => {\n  type petsGroup = "dog" | "cat";\n  interface IPetInfo {\n    name: string;\n    age: number;\n  }\n  type IPets = Record<petsGroup | "otherAnamial", IPetInfo>;\n  const animalsInfo: IPets = {\n    dog: {\n      name: "dogName",\n      age: 2,\n    },\n    cat: {\n      name: "catName",\n      age: 3,\n    },\n    otherAnamial: {\n      name: "otherAnamialName",\n      age: 10,\n    },\n  };\n};\n')])])]),t("hr"),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-a2836f0f1fbd07c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('/**\n * 技巧\n *  数组类型明文确认长度\n */\nbefore => {\n  const data = [\n    [1, 5.5],\n    [2, 3.7],\n    [3, 2.0],\n    [4, 5.9],\n    [5, 3.9],\n  ];\n};\nafter => {\n  interface CharData extends Array<number> {\n    0: number;\n    1: number;\n    length: 2;\n  }\n  const data2: CharData[] = [\n    [1, 5.5],\n    [2, 3.7],\n    [3, 2.0],\n    [4, 5.9],\n    [5, 3.9],\n  ];\n};\n\n/**\n * 技巧\n *  巧用查找类型\n */\nbefore => {\n  interface Person {\n    addr: {\n      city: string;\n      street: string;\n      num: number;\n    };\n  }\n  interface Address {\n    city: string;\n    street: string;\n    num: number;\n  }\n  const Addr: Address = {\n    city: "city",\n    street: "street",\n    num: 0,\n  };\n};\nafter => {\n  interface Person {\n    addr: {\n      city: string;\n      street: string;\n      num: number;\n    };\n  }\n  const Addr: Person["addr"] = {\n    city: "city",\n    street: "street",\n    num: 0,\n  };\n};\n\n/**\n * 技巧\n *  找到 Object rest 类型\n */\n//\nbefore => {\n  interface XYZ {\n    x: number;\n    y: number;\n    z: number;\n  }\n  const restObj: XYZ = { x: 1, y: 2, z: 3 };\n  const { x, y, z, ...rest } = restObj;\n  function dropXYZ(restObj: XYZ, ...rest) {\n    return rest;\n  }\n};\n// after (Pick , Exclude)\nafter => {\n  interface XYZ {\n    x: number;\n    y: number;\n    z: number;\n  }\n\n  type DropXYZ<T> = Pick<T, Exclude<keyof T, keyof XYZ>>;\n\n  function _dropXYZ<T extends XYZ>(\n    restObj: XYZ,\n    ...rest: Array<DropXYZ<T>>\n  ): Array<DropXYZ<T>> {\n    return rest;\n  }\n};\n\n')])])]),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-8e97623ba3097059.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("ul",[t("li",[t("p",[n._v("👍 推荐指数：")]),n._v(" "),t("ul",[t("li",[n._v("🌟🌟🌟: 强烈推荐")]),n._v(" "),t("li",[n._v("🌟🌟 : 值得一看")]),n._v(" "),t("li",[n._v("🌟 : 思维独特")])])]),n._v(" "),t("li",[t("p",[n._v("🌈 好的阅读资料：")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://jkchao.github.io/typescript-book-chinese/typings/discrominatedUnion.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("深入理解 TypeScript"),t("OutboundLink")],1),n._v(" 🌟🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"http://github.com/dt-fe/weekly/blob/master/58.%E7%B2%BE%E8%AF%BB%E3%80%8ATypescript2.0%20-%202.9%E3%80%8B.md",target:"_blank",rel:"noopener noreferrer"}},[n._v("精读《Typescript v2/v3 新特性》"),t("OutboundLink")],1),n._v(" 🌟🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5bf7f1c0e51d455ed74f625c",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 重构 Axios 经验分享"),t("OutboundLink")],1),n._v(" 🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_38080573/article/details/92838045",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 中高级类型 Record"),t("OutboundLink")],1),n._v(" 🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/SunshowerC/blog/issues/15",target:"_blank",rel:"noopener noreferrer"}},[n._v("超实用 Typescript 内置类型与自定义类型"),t("OutboundLink")],1),n._v(" 🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://shanyue.tech/post/ts-tips.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 高级技巧"),t("OutboundLink")],1),n._v(" 🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/39620591",target:"_blank",rel:"noopener noreferrer"}},[n._v("巧用 Typescript"),t("OutboundLink")],1),n._v(" 🌟🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000020300143",target:"_blank",rel:"noopener noreferrer"}},[n._v("typescript 难点梳理"),t("OutboundLink")],1),n._v(" 🌟🌟")])])]),n._v(" "),t("li",[t("p",[n._v("🙋‍♂️ 有意思的讨论：")]),n._v(" "),t("ul",[t("li",[n._v("interface 与 type 的区别是什么？\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/SunshowerC/blog/issues/7",target:"_blank",rel:"noopener noreferrer"}},[n._v("Github 上的讨论"),t("OutboundLink")],1),n._v(" 🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://stackoverflow.com/questions/37233735/typescript-interfaces-vs-types",target:"_blank",rel:"noopener noreferrer"}},[n._v("Stackoverflow 上的讨论"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/50859466",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 重构 Axios 经验分享"),t("OutboundLink")],1),n._v(" 🌟")]),n._v(" "),t("li",[t("a",{attrs:{href:"https://www.zhihu.com/question/338484877",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 会成为 ES 的标准吗?"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://www.zhihu.com/question/354601204/answer/888551021",target:"_blank",rel:"noopener noreferrer"}},[n._v("TypeScript 中的 never 类型具体有什么用？"),t("OutboundLink")],1),n._v(" 🌟")])])])])]),n._v(" "),t("li",[t("p",[n._v("🌼 官网资料")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.tslang.cn/docs/release-notes/typescript-3.1.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中文文档"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"http://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("英文文档"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://typescript-play.js.org/",target:"_blank",rel:"noopener noreferrer"}},[n._v("在线 TypeScript 测试平台"),t("OutboundLink")],1)])])]),n._v(" "),t("li",[t("p",[n._v("🔮 彩蛋")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/SunshowerC/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[n._v("掌握甩锅技术: Typescript 运行时数据校验"),t("OutboundLink")],1)])])])]),n._v(" "),t("hr"),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4985324-b24bb0438fb657bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),n._v(" "),t("hr"),n._v(" "),t("h3",{attrs:{id:"结束了？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结束了？"}},[n._v("#")]),n._v(" 结束了？")]),n._v(" "),t("p",[n._v("...")]),n._v(" "),t("h1",{attrs:{id:"还有个小彩蛋"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#还有个小彩蛋"}},[n._v("#")]),n._v(" 还有个小彩蛋~")]),n._v(" "),t("p",[n._v("这里有个关于 Promise 的小题目：")]),n._v(" "),t("div",{staticClass:"language-lang='js' extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n  const p1 = new Promise((resolve,reject) => {\n    console.log('Promise 1');\n    resolve();\n  }).then(() => {\n    console.log('then 11');\n    const p2 = new Promise((resolve,reject) => {\n      console.log('Promise 2');\n      resolve();\n    }).then(() => {\n      console.log('then 21');\n    }).then(() => {\n      console.log('then 22');\n    })\n  }).then(() => {\n    console.log('then 12')\n  })\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);